{"version":3,"sources":["turbopack:///[project]/src/lib/api.ts","turbopack:///[project]/src/app/user/dashboard/page.tsx"],"sourcesContent":["import { \n  LoginResponse, Test, TestAttempt, TestAttemptResponse, User, Overview, \n  UserPerformance\n} from './types';\n\nconst BASE = process.env.NEXT_PUBLIC_API_BASE ?? '/api';\n\nasync function request<T>(path: string, opts: RequestInit = {}): Promise<T> {\n  const token = typeof window !== 'undefined' ? localStorage.getItem('dtest_token') : null;\n  const headers: Record<string,string> = { 'Content-Type': 'application/json' };\n  if (token) headers['Authorization'] = `Bearer ${token}`;\n  \n  const res = await fetch(`${BASE}${path}`, { ...opts, headers });\n  if (!res.ok) {\n    const body = await res.json().catch(() => ({ message: res.statusText }));\n    throw new Error(body.message || res.statusText);\n  }\n  return res.json();\n}\n\n// Auth\nexport const login = (email: string, password: string): Promise<LoginResponse> =>\n  request<LoginResponse>('/auth/login', { method: 'POST', body: JSON.stringify({ email, password }) });\n\n// Tests\nexport const fetchNextTest = (level?: string): Promise<Test> =>\n  request<Test>(`/tests/next${level ? `?level=${level}` : ''}`);\n\nexport const startTest = (id: string): Promise<Test> =>\n  request<Test>(`/tests/${id}/start`);\n\nexport const submitAttempt = (testId: string, responses: { questionId: string; answer: string | boolean }[]): Promise<TestAttemptResponse> =>\n  request<TestAttemptResponse>(`/attempts/${testId}/submit`, { method: 'POST', body: JSON.stringify({ responses }) });\n\nexport const getMyResults = (): Promise<TestAttempt[]> =>\n  request<TestAttempt[]>('/attempts/me');\n\n// Admin users\nexport const listUsers = (): Promise<User[]> => request<User[]>('/users');\n\nexport const createUser = (payload: Omit<User, '_id'>): Promise<User> =>\n  request<User>('/users', { method: 'POST', body: JSON.stringify(payload) });\n\nexport const updateUser = (id:string, payload: Partial<User>): Promise<User> =>\n  request<User>(`/users/${id}`, { method: 'PATCH', body: JSON.stringify(payload) });\n\nexport const deleteUser = (id:string): Promise<{ success: boolean }> =>\n  request<{ success: boolean }>(`/users/${id}`, { method: 'DELETE' });\n\n// Admin tests\nexport const listTests = (): Promise<Test[]> => request<Test[]>('/tests');\n\nexport const createTest = (payload: Omit<Test, '_id'>): Promise<Test> =>\n  request<Test>('/tests', { method: 'POST', body: JSON.stringify(payload) });\n\nexport const updateTest = (id:string, payload: Partial<Test>): Promise<Test> =>\n  request<Test>(`/tests/${id}`, { method: 'PATCH', body: JSON.stringify(payload) });\n\nexport const deleteTest = (id:string): Promise<{ success: boolean }> =>\n  request<{ success: boolean }>(`/tests/${id}`, { method: 'DELETE' });\n\n// Stats\nexport const getOverview = (): Promise<Overview> => request<Overview>('/stats/overview');\n\nexport const getUserPerformance = (userId: string): Promise<UserPerformance> =>\n  request<UserPerformance>(`/stats/user/${userId}`);\n","'use client';\n\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { getMyResults, fetchNextTest} from '@/lib/api';\nimport { Button } from '@/components/ui/button';\nimport { Test, TestAttempt } from '@/lib/types';\n\nexport default function Dashboard() {\n  const [results, setResults] = useState<TestAttempt[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load() {\n    setLoading(true);\n    try {\n      const res: TestAttempt[] = await getMyResults();\n      setResults(res);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function start(level?: string) {\n    const t: Test = await fetchNextTest(level);\n    window.location.href = `/user/test?id=${t._id}`;\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-xl font-semibold mb-4\">Your Dashboard</h2>\n\n      <div className=\"mb-4 flex gap-2\">\n        <Button onClick={() => start('A1')}>Start A1</Button>\n        <Button onClick={() => start('A2')}>Start A2</Button>\n        <Button onClick={() => start('B1')}>Start B1</Button>\n        <Button onClick={() => start('B2')}>Start B2</Button>\n      </div>\n\n      <h3 className=\"text-lg font-medium\">Previous Results</h3>\n\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul className=\"space-y-2 mt-3\">\n          {results.map((r) => (\n            <li key={r._id} className=\"p-3 border rounded\">\n              <div className=\"flex justify-between\">\n                <div>\n                  <div className=\"font-semibold\">Score: {r.score}%</div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    {new Date(r.createdAt).toLocaleString()}\n                  </div>\n                </div>\n                <div>\n                  <Link href={`/user/test?attemptId=${r._id}`}>View</Link>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}