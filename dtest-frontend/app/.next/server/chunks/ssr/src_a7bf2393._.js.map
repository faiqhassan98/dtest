{"version":3,"sources":["turbopack:///[project]/src/lib/api.ts","turbopack:///[project]/src/app/admin/dashboard/page.tsx"],"sourcesContent":["import { \n  LoginResponse, Test, TestAttempt, TestAttemptResponse, User, Overview, \n  UserPerformance\n} from './types';\n\nconst BASE = process.env.NEXT_PUBLIC_API_BASE ?? '/api';\n\nasync function request<T>(path: string, opts: RequestInit = {}): Promise<T> {\n  const token = typeof window !== 'undefined' ? localStorage.getItem('dtest_token') : null;\n  const headers: Record<string,string> = { 'Content-Type': 'application/json' };\n  if (token) headers['Authorization'] = `Bearer ${token}`;\n  \n  const res = await fetch(`${BASE}${path}`, { ...opts, headers });\n  if (!res.ok) {\n    const body = await res.json().catch(() => ({ message: res.statusText }));\n    throw new Error(body.message || res.statusText);\n  }\n  return res.json();\n}\n\n// Auth\nexport const login = (email: string, password: string): Promise<LoginResponse> =>\n  request<LoginResponse>('/auth/login', { method: 'POST', body: JSON.stringify({ email, password }) });\n\n// Tests\nexport const fetchNextTest = (level?: string): Promise<Test> =>\n  request<Test>(`/tests/next${level ? `?level=${level}` : ''}`);\n\nexport const startTest = (id: string): Promise<Test> =>\n  request<Test>(`/tests/${id}/start`);\n\nexport const submitAttempt = (testId: string, responses: { questionId: string; answer: string | boolean }[]): Promise<TestAttemptResponse> =>\n  request<TestAttemptResponse>(`/attempts/${testId}/submit`, { method: 'POST', body: JSON.stringify({ responses }) });\n\nexport const getMyResults = (): Promise<TestAttempt[]> =>\n  request<TestAttempt[]>('/attempts/me');\n\n// Admin users\nexport const listUsers = (): Promise<User[]> => request<User[]>('/users');\n\nexport const createUser = (payload: Omit<User, '_id'>): Promise<User> =>\n  request<User>('/users', { method: 'POST', body: JSON.stringify(payload) });\n\nexport const updateUser = (id:string, payload: Partial<User>): Promise<User> =>\n  request<User>(`/users/${id}`, { method: 'PATCH', body: JSON.stringify(payload) });\n\nexport const deleteUser = (id:string): Promise<{ success: boolean }> =>\n  request<{ success: boolean }>(`/users/${id}`, { method: 'DELETE' });\n\n// Admin tests\nexport const listTests = (): Promise<Test[]> => request<Test[]>('/tests');\n\nexport const createTest = (payload: Omit<Test, '_id'>): Promise<Test> =>\n  request<Test>('/tests', { method: 'POST', body: JSON.stringify(payload) });\n\nexport const updateTest = (id:string, payload: Partial<Test>): Promise<Test> =>\n  request<Test>(`/tests/${id}`, { method: 'PATCH', body: JSON.stringify(payload) });\n\nexport const deleteTest = (id:string): Promise<{ success: boolean }> =>\n  request<{ success: boolean }>(`/tests/${id}`, { method: 'DELETE' });\n\n// Stats\nexport const getOverview = (): Promise<Overview> => request<Overview>('/stats/overview');\n\nexport const getUserPerformance = (userId: string): Promise<UserPerformance> =>\n  request<UserPerformance>(`/stats/user/${userId}`);\n","'use client';\n\nimport { useEffect, useState } from 'react';\nimport { getOverview } from '@/lib/api';\n\ninterface Overview {\n  reading: {\n    totalAttempts: number;\n    avgScore: number;\n  };\n  users: {\n    totalUsers: number;\n    totalLogins: number;\n  };\n}\n\nexport default function AdminDashboard() {\n  const [overview, setOverview] = useState<Overview | null>(null);\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load() {\n    const data: Overview = await getOverview();\n    setOverview(data);\n  }\n\n  if (!overview) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h2 className=\"text-xl font-semibold mb-4\">Admin â€” Dashboard</h2>\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"p-4 border rounded\">\n          <div className=\"text-sm text-muted-foreground\">Reading Attempts</div>\n          <div className=\"text-2xl font-bold\">{overview.reading.totalAttempts}</div>\n          <div className=\"text-sm\">Avg score: {overview.reading.avgScore}%</div>\n        </div>\n        <div className=\"p-4 border rounded\">\n          <div className=\"text-sm text-muted-foreground\">Users</div>\n          <div className=\"text-2xl font-bold\">{overview.users.totalUsers}</div>\n          <div className=\"text-sm\">Total logins: {overview.users.totalLogins}</div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"mKAKA,IAAM,EAAO,QAAQ,GAAG,CAAC,oBAAoB,EAAI,OAEjD,eAAe,EAAW,CAAY,CAAE,EAAoB,CAAC,CAAC,EAK5D,IAAM,EAAM,MAAM,MAAM,CAAA,EAAG,EAAA,EAAO,EAAA,CAAM,CAAE,CAAE,GAAG,CAAI,CAAE,QAHd,CAAE,eAAgB,kBAAmB,CAGf,GAC7D,GAAI,CAAC,EAAI,EAAE,CAET,CAFW,KAEL,AAAI,MAAM,CADH,MAAM,EAAI,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAE,QAAS,EAAI,UAAU,CAAC,CAAC,CAAA,EACjD,OAAO,EAAI,EAAI,UAAU,EAEhD,OAAO,EAAI,IAAI,EACjB,CAGO,IAAM,EAAQ,CAAC,EAAe,IACnC,EAAuB,cAAe,CAAE,OAAQ,OAAQ,KAAM,KAAK,SAAS,CAAC,OAAE,WAAO,CAAS,EAAG,GAGvF,EAAgB,AAAC,GAC5B,EAAc,CAAC,WAAW,EAAE,EAAQ,CAAC,OAAO,EAAE,EAAA,CAAO,CAAG,GAAA,CAAI,EAEjD,EAAa,AAAD,GACvB,EAAc,CAAC,OAAO,EAAE,EAAG,MAAM,CAAC,EAEvB,EAAgB,CAAC,EAAgB,IAC5C,EAA6B,CAAC,UAAU,EAAE,EAAO,OAAO,CAAC,CAAE,CAAE,OAAQ,OAAQ,KAAM,KAAK,SAAS,CAAC,WAAE,CAAU,EAAG,GAEtG,EAAe,IAC1B,EAAuB,gBA2BZ,EAAc,IAAyB,EAAkB,kFC5DtE,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAae,SAAS,IACtB,GAAM,CAAC,EAAU,EAAY,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAkB,MAM1D,eAAe,IAEb,EADuB,MAAM,CAAA,EAAA,CACjB,CADiB,WAAA,AAAW,IAE1C,OAEA,CATA,CAAA,EAAA,AASI,EATJ,SAAA,AAAS,EAAC,KACR,GACF,EAAG,EAAE,EAOA,GAGH,CAAA,EAAA,EAAA,EAHa,EAGb,EAAC,MAAA,WACC,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,sCAA6B,sBAC3C,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,mCACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+BACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,yCAAgC,qBAC/C,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,8BAAsB,EAAS,OAAO,CAAC,aAAa,GACnE,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,oBAAU,cAAY,EAAS,OAAO,CAAC,QAAQ,CAAC,UAEjE,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+BACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,yCAAgC,UAC/C,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,8BAAsB,EAAS,KAAK,CAAC,UAAU,GAC9D,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,oBAAU,iBAAe,EAAS,KAAK,CAAC,WAAW,aAdpD,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,UAAI,cAmB7B"}